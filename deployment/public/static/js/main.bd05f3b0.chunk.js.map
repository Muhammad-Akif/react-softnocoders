{"version":3,"sources":["images/web.jpg","images/software.jpg","images/wb.jpeg","images/mob.jpeg","images/sw.jpeg","images/mar.jpeg","images/android.jpeg","images/dm.jpeg","components/Navbar.jsx","components/common.jsx","components/Home.jsx","components/About.jsx","components/Card.jsx","components/Sdata.jsx","components/Services.jsx","config/firebase.js","components/Contact.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","exact","activeClassName","Common","props","name","visit","btname","src","imgsrc","width","Home","web","About","Card","alt","title","href","class","Sdata","mobile","software","marketing","andriod","digital","Services","map","val","ind","key","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Contact","useState","fullname","phone","email","msg","data","setData","check","setCheck","InputEvent","event","target","value","preVal","onSubmit","e","preventDefault","alert","Obj","fullName","Phone","Email","Message","Pakistan","database","ref","push","console","log","for","required","onChange","placeholder","aria-describedby","rows","onClick","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bd05f3b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/web.8784cb96.jpg\";","module.exports = __webpack_public_path__ + \"static/media/software.8cb49ae7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wb.e4bf6987.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/mob.83767b01.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/sw.8b662591.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/mar.2e4810e0.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/android.c1ab11ba.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/dm.f44db3e4.jpeg\";","import React from 'react'\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar = () =>{\n    return(\n    <>\n        <div className=\"container-fluid nav_bg\">\n            <div className=\"row\">\n                <div className=\"col-10 mx-auto\">\n                    <nav className=\"navbar navbar-expand-lg navbar-light\">\n                        <NavLink className=\"navbar-brand\" to=\"/\"><em>SoftnoCoders</em></NavLink>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                            <ul className=\"navbar-nav moveNav\">\n                                <li className=\"nav-item active\">\n                                    <NavLink exact className=\"nav-link\" activeClassName=\"menu_active\" to=\"/\">Home</NavLink>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <NavLink className=\"nav-link\" activeClassName=\"menu_active\" to=\"/about\">About</NavLink>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <NavLink className=\"nav-link\" activeClassName=\"menu_active\" to=\"/service\">Service</NavLink>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <NavLink className=\"nav-link\" activeClassName=\"menu_active\" to=\"/contact\">Contact</NavLink>\n                                </li>\n                            </ul>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        </div>\n    </>\n    )\n}\n\nexport default Navbar;","import React from 'react'\nimport { NavLink } from 'react-router-dom';\n\nconst Common = (props) =>{\n    return(\n    <>\n        <section id=\"header\" className=\"d-flex align-items-center\">\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-10 mx-auto\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 pt-5 pt-lg-0 order2 order-lg-1 d-flex justify-content-center flex-column\">\n                            <h1>\n                                {props.name}\n                                <strong className=\"brand-name\"> SoftnoCoders</strong>\n                            </h1>\n                            <h2 className=\"my-3\">\n                                We are the team of talented developer for making Softwares\n                            </h2>\n                            <div className=\"mt-3\">\n                                <NavLink to={props.visit} className=\"btn-get-started\">\n                                    {props.btname}\n                                </NavLink>\n                            </div>\n                        </div>\n                        <div className=\"col-md-4 order1 order-lg-2 pt-4 header-img\">\n                            <img src={props.imgsrc} className=\"img-fluid animated\" width=\"100%\"/>\n                        </div>\n                    </div>   \n                </div>\n            </div>\n        </div>\n        </section>\n    </>\n    )\n}\n\nexport default Common;","import React from 'react'\nimport Common from './common'\nimport web from '../images/web.jpg'\n\nconst Home = () =>{\n    return(\n    <>\n        <Common \n            name=\"Grow your bussiness with\"\n            imgsrc = {web}\n            visit = \"/Service\"\n            btname = \"Get Started\"\n        />\n    </>\n    )\n}\n\nexport default Home;","import React from 'react'\nimport Common from \"./common\"\nimport web from '../images/software.jpg'\nconst About = () =>{\n    return(\n    <>\n        <Common \n            name=\"Welcome to About Page\"\n            imgsrc = {web}\n            visit = \"/contact\"\n            btname = \"Contact Now\"\n        />\n    </>\n    )\n}\n\nexport default About;","import React from 'react'\nconst Card = (props) =>{\n    return(\n    <>\n        <div className=\"col-md-4 col-10 mx-auto\">\n            <div className=\"card\">\n            <img className=\"card-img-top\" src={props.imgsrc} width=\"200px\" alt=\"Card image cap\"/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{props.title}</h5>\n                    <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n                    <a href=\"#\" class=\"btn btn-primary\">Course info</a>\n                </div>\n            </div>    \n        </div>\n    </>\n    )\n}\n\nexport default Card;","import web from '../images/wb.jpeg'\nimport mobile from '../images/mob.jpeg'\nimport software from '../images/sw.jpeg'\nimport marketing from '../images/mar.jpeg'\nimport andriod from '../images/android.jpeg'\nimport digital from '../images/dm.jpeg'\n\nconst Sdata = [\n    {\n        imgsrc: web,\n        title: 'Web Development'\n    },\n    {\n        imgsrc: mobile,\n        title: 'App Development'\n    },\n    {\n        imgsrc: software,\n        title: 'Software Development'\n    },\n    {\n        imgsrc: marketing,\n        title: 'Marketing'\n    },\n    {\n        imgsrc: andriod,\n        title: 'Android Development'\n    },\n    {\n        imgsrc: digital,\n        title: 'Digital Marketing'\n    },\n]\n\nexport default Sdata;","import React from 'react'\nimport Card from './Card'\nimport Sdata from './Sdata'\n\nconst Services = () =>{\n    return(\n    <>\n        <div className=\"my-5\">\n            <h1 className=\"text-center pb-5\">Our Services</h1>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-10 mx-auto\">\n                        <div className=\"row gy-3\">\n                            {\n                                Sdata.map((val,ind)=>{\n                                    return(\n                                        <Card \n                                            key={ind}\n                                            imgsrc={val.imgsrc}\n                                            title={val.title}\n                                        />\n                                    )\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n                \n        </div>\n    </>\n    )\n}\n\nexport default Services;","import firebase from 'firebase';\nimport 'firebase/auth'\nimport 'firebase/database'\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDIT0F4utPmorKsXUSE4_iGFMkY3d7LrqU\",\n  authDomain: \"softnocode.firebaseapp.com\",\n  databaseURL: \"https://softnocode-default-rtdb.firebaseio.com\",\n  projectId: \"softnocode\",\n  storageBucket: \"softnocode.appspot.com\",\n  messagingSenderId: \"134788675276\",\n  appId: \"1:134788675276:web:8db62b355429d500c97469\",\n  measurementId: \"G-R1ZG64VM2E\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, { useState } from 'react'\nimport firebase from \"../config/firebase\"\n\nfunction Contact() {\n    const [data, setData] = useState({\n        fullname: \"\",\n        phone: \"\",\n        email: \"\",\n        msg: \"\",\n    });\n    const [check, setCheck] = useState(false)\n    const InputEvent = (event) => {\n        const { name, value } = event.target;\n        setData((preVal) => {\n            return {\n                ...preVal,\n                [name]: value,\n            }\n        })\n    }\n    const formSubmit = (e) => {\n        e.preventDefault()\n        alert(`Submit Successfully...`)\n        const Obj = {\n            fullName: data.fullname,\n            Phone: data.phone,\n            Email: data.email,\n            Message: data.msg,\n            Pakistan: check\n        }\n        firebase.database().ref(\"/\").push(Obj);\n        console.log(\"Obj ===> \",Obj)\n        setData({\n            fullname: \"\",\n            phone: \"\",\n            email: \"\",\n            msg: \"\",\n        })\n        setCheck(false)\n    };\n    return (\n        <>\n            <div className=\"my-5\">\n                <h1 className=\"text-center\">Contact US</h1>\n                <div className=\"container contact_div\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6 col-10 mx-auto\">\n                            <form onSubmit={formSubmit}>\n                                <div className=\"form-group\">\n                                    <label for=\"exampleInputPassword1\">Full Name</label>\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputPassword1\" required name=\"fullname\" value={data.fullname} onChange={InputEvent} placeholder=\"Enter Full Name\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label for=\"exampleInputPassword1\">Phone</label>\n                                    <input type=\"number\" className=\"form-control\" id=\"exampleInputPassword1\" required name=\"phone\" value={data.phone} onChange={InputEvent} placeholder=\"Enter Phone No.\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label for=\"exampleInputEmail1\">Email address</label>\n                                    <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" required aria-describedby=\"emailHelp\" name=\"email\" value={data.email} onChange={InputEvent} placeholder=\"Enter email\" />\n                                    <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"exampleFormControlTextarea1\">Message</label>\n                                    <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" name=\"msg\" required value={data.msg} onChange={InputEvent} rows=\"3\"></textarea>\n                                </div>\n                                <div className=\"form-check\">\n                                    <input type=\"checkbox\" className=\"form-check-input\" onClick={(e) => setCheck(true)} id=\"exampleCheck1\" />\n                                    <label className=\"form-check-label\" for=\"exampleCheck1\">Are You From Pakistan</label>\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Contact;","import React from 'react';\nimport './App.css';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\"\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\nimport About from './components/About'\nimport Services from './components/Services'\nimport Contact from './components/Contact'\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <>\n      <Navbar/>\n      <Switch>\n        <Route exact path='/' component={Home}/>\n        <Route exact path='/about' component={About}/>\n        <Route exact path='/service' component={Services}/>\n        <Route exact path='/contact' component={Contact}/>\n        <Redirect to='/' />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n//","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}